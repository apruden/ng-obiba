/*!
 * ng-obiba - v0.1.0
 * https://github.com/obiba/ng-obiba

 * License: GNU Public License version 3
 * Date: 2014-12-11
 */
<<<<<<< HEAD
"use strict";angular.module("obiba.utils",[]).service("StringUtils",function(){this.capitaliseFirstLetter=function(a){return a?a.charAt(0).toUpperCase()+a.slice(1):null}}),angular.module("obiba.notification",["templates-main","pascalprecht.translate","ui.bootstrap"]),angular.module("obiba.notification").constant("NOTIFICATION_EVENTS",{showNotificationDialog:"event:show-notification-dialog",showConfirmDialog:"event:show-confirmation-dialog",confirmDialogAccepted:"event:confirmation-accepted",confirmDialogRejected:"event:confirmation-rejected"}).controller("NotificationController",["$rootScope","$scope","$modal","NOTIFICATION_EVENTS",function(a,b,c,d){b.$on(d.showNotificationDialog,function(a,b){c.open({templateUrl:"notification/notification-modal.tpl.html",controller:"NotificationModalController",resolve:{notification:function(){return b}}})}),b.$on(d.showConfirmDialog,function(b,e,f){c.open({templateUrl:"notification/notification-confirm-modal.tpl.html",controller:"NotificationConfirmationController",resolve:{confirm:function(){return e}}}).result.then(function(){a.$broadcast(d.confirmDialogAccepted,f)},function(){a.$broadcast(d.confirmDialogRejected,f)})})}]).controller("NotificationModalController",["$scope","$modalInstance","notification",function(a,b,c){a.notification=c,a.notification.iconClass||(a.notification.iconClass="fa-exclamation-triangle"),a.notification.title||a.notification.titleKey||(a.notification.titleKey="error"),a.close=function(){b.dismiss("close")}}]).controller("NotificationConfirmationController",["$scope","$modalInstance","confirm",function(a,b,c){a.confirm=c,a.ok=function(){b.close()},a.cancel=function(){b.dismiss("cancel")}}]),angular.module("obiba.rest",["obiba.notification"]).config(["$httpProvider",function(a){a.responseInterceptors.push("httpErrorsInterceptor")}]).factory("httpErrorsInterceptor",["$q","$rootScope","NOTIFICATION_EVENTS",function(a,b,c){return function(d){return d.then(function(a){return a},function(d){var e=d.config;return e.errorHandler?a.reject(d):(b.$broadcast(c.showNotificationDialog,{message:d.data?d.data:angular.fromJson(d)}),a.reject(d))})}}]),angular.module("obiba.form",["obiba.utils","obiba.notification","templates-main"]),angular.module("obiba.form").service("FormServerValidation",["$rootScope","$log","StringUtils","NOTIFICATION_EVENTS",function(a,b,c,d){this.error=function(e,f,g){if(e.data instanceof Array){var h=function(a,b){f[a].$dirty=!0,f[a].$setValidity("server",!1),null===f[a].errors&&(f[a].errors=[]),f[a].errors.push(c.capitaliseFirstLetter(b.message))};e.data.forEach(function(a){var b=a.path.split(".").slice(-2).join(".");g&&g.length?g.forEach(function(c){h(b+"-"+c,a)}):h(b,a)}),b.debug(f)}else a.$broadcast(d.showNotificationDialog,{titleKey:"form-server-error",message:e.data?e.data:angular.fromJson(e)})}}]),angular.module("obiba.form").directive("formServerError",[function(){return{restrict:"A",require:"?ngModel",link:function(a,b,c,d){return b.on("change",function(){return a.$apply(function(){return d.$setValidity("server",!0)})})}}}]).directive("formInput",[function(){return{restrict:"AE",require:"^form",scope:{name:"@",model:"=",disabled:"=",type:"@",label:"@",required:"@",help:"@"},templateUrl:"form/form-input-template.tpl.html",link:function(a,b,c,d){(angular.isUndefined(a.model)||null===a.model)&&(a.model=""),a.form=d},compile:function(a,b){b.type||(b.type="text")}}}]).directive("formTextarea",[function(){return{restrict:"AE",require:"^form",scope:{name:"@",model:"=",disabled:"=",label:"@",required:"@",help:"@"},templateUrl:"form/form-textarea-template.tpl.html",link:function(a,b,c,d){(angular.isUndefined(a.model)||null===a.model)&&(a.model=""),a.form=d},compile:function(a,b){b.type||(b.type="text")}}}]).directive("formLocalizedInput",[function(){return{restrict:"AE",require:"^form",scope:{locales:"=",name:"@",model:"=",label:"@",required:"@",help:"@"},templateUrl:"form/form-localized-input-template.tpl.html",link:function(a,b,c,d){(angular.isUndefined(a.model)||null===a.model)&&(a.model=""),a.form=d}}}]).directive("formCheckbox",[function(){return{restrict:"AE",require:"^form",scope:{name:"@",model:"=",label:"@",help:"@"},templateUrl:"form/form-checkbox-template.tpl.html",link:function(a,b,c,d){(angular.isUndefined(a.model)||null===a.model)&&(a.model=!1),a.form=d}}}]).directive("formCheckboxGroup",[function(){return{restrict:"A",scope:{labelPrefix:"@",options:"=",selected:"="},template:'<div form-checkbox ng-repeat="item in items" model="item.value" label="{{labelPrefix}}.{{item.name}}">',link:function(a){a.items=a.options.map(function(b){return a.selected?a.selected.indexOf(b)<0?{name:b,value:!1}:{name:b,value:!0}:{name:b,value:!1}}),a.$watch("items",function(b){a.selected=b.filter(function(a){return a.value}).map(function(a){return a.name})},!0)}}}]),angular.module("ngObiba",["obiba.form","obiba.notification","obiba.rest","obiba.utils"]),angular.module("templates-main",["form/form-checkbox-template.tpl.html","form/form-input-template.tpl.html","form/form-localized-input-template.tpl.html","form/form-textarea-template.tpl.html","notification/notification-confirm-modal.tpl.html","notification/notification-modal.tpl.html"]),angular.module("form/form-checkbox-template.tpl.html",[]).run(["$templateCache",function(a){a.put("form/form-checkbox-template.tpl.html",'<div class="checkbox" ng-class="{\'has-error\': (form[fieldName].$dirty || form.saveAttempted) && form[name].$invalid}">\n\n  <label for="{{name}}" class="control-label">\n    {{label | translate}}\n    <span ng-show="required">*</span>\n  </label>\n\n  <input\n      ng-model="model"\n      type="checkbox"\n      id="{{name}}"\n      name="{{name}}"\n      form-server-error>\n\n  <ul class="input-error list-unstyled" ng-show="form[name].$dirty && form[name].$invalid">\n    <li ng-show="form[name].$error.required" translate>required</li>\n    <li ng-repeat="error in form[name].errors">{{error}}</li>\n  </ul>\n\n  <p ng-show="help" class="help-block">{{help | translate}}</p>\n\n</div>\n\n')}]),angular.module("form/form-input-template.tpl.html",[]).run(["$templateCache",function(a){a.put("form/form-input-template.tpl.html",'<div class="form-group" ng-class="{\'has-error\': (form[name].$dirty || form.saveAttempted) && form[name].$invalid}">\n\n  <label for="{{name}}" class="control-label">\n    {{label | translate}}\n    <span ng-show="required">*</span>\n  </label>\n\n  <input\n      ng-model="model"\n      type="{{type}}"\n      class="form-control"\n      id="{{name}}"\n      name="{{name}}"\n      form-server-error\n      ng-disabled="disabled"\n      ng-required="required">\n\n  <ul class="input-error list-unstyled" ng-show="form[name].$dirty && form[name].$invalid">\n    <li ng-show="form[name].$error.required" translate>required</li>\n    <li ng-repeat="error in form[name].errors">{{error}}</li>\n  </ul>\n\n  <p ng-show="help" class="help-block">{{help | translate}}</p>\n\n</div>')}]),angular.module("form/form-localized-input-template.tpl.html",[]).run(["$templateCache",function(a){a.put("form/form-localized-input-template.tpl.html",'<div class="form-group" ng-class="{\'has-error\': (form[name].$dirty || form.saveAttempted) && form[name].$invalid}">\n\n    <label for="{{name}}" class="control-label">\n        {{label | translate}}\n        <span ng-show="required">*</span>\n    </label>\n\n    <div class="input-group" ng-repeat="locale in locales track by $index">\n        <span class="input-group-addon">{{locale.lang}}</span>\n        <input\n                ng-model="locale.value"\n                type="text"\n                class="form-control"\n                id="{{name}}.{{locale.lang}}"\n                name="{{name}}.locale.lang}}"\n                form-server-error>\n    </div>\n\n    <ul class="input-error list-unstyled" ng-show="form[name].$dirty && form[name].$invalid">\n        <li ng-show="form[name].$error.required" translate>required</li>\n        <li ng-repeat="error in form[name].errors">{{error}}</li>\n    </ul>\n\n    <p ng-show="help" class="help-block">{{help | translate}}</p>\n\n</div>')}]),angular.module("form/form-textarea-template.tpl.html",[]).run(["$templateCache",function(a){a.put("form/form-textarea-template.tpl.html",'<div class="form-group" ng-class="{\'has-error\': (form[name].$dirty || form.saveAttempted) && form[name].$invalid}">\n\n  <label for="{{name}}" class="control-label">\n    {{label | translate}}\n    <span ng-show="required">*</span>\n  </label>\n\n  <textarea\n      ng-model="model"\n      class="form-control"\n      id="{{name}}"\n      name="{{name}}"\n      form-server-error\n      ng-disabled="disabled"\n      ng-required="required"></textarea>\n\n  <ul class="input-error list-unstyled" ng-show="form[name].$dirty && form[name].$invalid">\n    <li ng-show="form[name].$error.required" translate>required</li>\n    <li ng-repeat="error in form[name].errors">{{error}}</li>\n  </ul>\n\n  <p ng-show="help" class="help-block">{{help | translate}}</p>\n\n</div>\n')}]),angular.module("notification/notification-confirm-modal.tpl.html",[]).run(["$templateCache",function(a){a.put("notification/notification-confirm-modal.tpl.html",'<div class="modal-content">\n\n  <div class="modal-header">\n    <button type="button" class="close" aria-hidden="true" ng-click="cancel()">&times;</button>\n    <h4 class="modal-title">\n      <i class="fa fa-exclamation-triangle"></i>\n      <span ng-hide="confirm.title" translate>confirmation</span>\n      {{confirm.title}}\n    </h4>\n  </div>\n\n  <div class="modal-body">\n    <p>{{confirm.message}}</p>\n  </div>\n\n  <div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="cancel()">\n      <span ng-hide="confirm.cancel" translate>cancel</span>\n      {{confirm.cancel}}\n    </button>\n    <button type="button" class="btn btn-primary" ng-click="ok()">\n      <span ng-hide="confirm.ok" translate>ok</span>\n      {{confirm.ok}}\n    </button>\n  </div>\n\n</div>')}]),angular.module("notification/notification-modal.tpl.html",[]).run(["$templateCache",function(a){a.put("notification/notification-modal.tpl.html",'<div class="modal-content">\n\n  <div class="modal-header">\n    <button type="button" class="close" aria-hidden="true" ng-click="close()">&times;</button>\n    <h4 class="modal-title">\n      <i ng-hide="notification.iconClass" class="fa fa-info-circle"></i>\n      <i ng-show="notification.iconClass" class="fa {{notification.iconClass}}"></i>\n      <span ng-hide="notification.title" translate>{{notification.titleKey || \'notification\'}}</span>\n      {{notification.title}}\n    </h4>\n  </div>\n\n  <div class="modal-body">\n    <p>{{notification.message}}</p>\n  </div>\n\n  <div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="close()">\n      <span translate>close</span>\n    </button>\n  </div>\n\n</div>')}]);
=======
"use strict";angular.module("obiba.utils",[]).service("StringUtils",function(){this.capitaliseFirstLetter=function(a){return a?a.charAt(0).toUpperCase()+a.slice(1):null}}),angular.module("obiba.notification",["templates-main","pascalprecht.translate","ui.bootstrap"]),angular.module("obiba.notification").constant("NOTIFICATION_EVENTS",{showNotificationDialog:"event:show-notification-dialog",showConfirmDialog:"event:show-confirmation-dialog",confirmDialogAccepted:"event:confirmation-accepted",confirmDialogRejected:"event:confirmation-rejected"}).controller("NotificationController",["$rootScope","$scope","$modal","NOTIFICATION_EVENTS",function(a,b,c,d){b.$on(d.showNotificationDialog,function(a,b){c.open({templateUrl:"notification/notification-modal.tpl.html",controller:"NotificationModalController",resolve:{notification:function(){return b}}})}),b.$on(d.showConfirmDialog,function(b,e,f){c.open({templateUrl:"notification/notification-confirm-modal.tpl.html",controller:"NotificationConfirmationController",resolve:{confirm:function(){return e}}}).result.then(function(){a.$broadcast(d.confirmDialogAccepted,f)},function(){a.$broadcast(d.confirmDialogRejected,f)})})}]).controller("NotificationModalController",["$scope","$modalInstance","notification",function(a,b,c){a.notification=c,a.notification.iconClass||(a.notification.iconClass="fa-exclamation-triangle"),a.notification.title||a.notification.titleKey||(a.notification.titleKey="error"),a.close=function(){b.dismiss("close")}}]).controller("NotificationConfirmationController",["$scope","$modalInstance","confirm",function(a,b,c){a.confirm=c,a.ok=function(){b.close()},a.cancel=function(){b.dismiss("cancel")}}]),angular.module("obiba.rest",["obiba.notification"]).config(["$httpProvider",function(a){a.responseInterceptors.push("httpErrorsInterceptor")}]).factory("httpErrorsInterceptor",["$q","$rootScope","NOTIFICATION_EVENTS",function(a,b,c){return function(d){return d.then(function(a){return a},function(d){var e=d.config;return e.errorHandler?a.reject(d):(b.$broadcast(c.showNotificationDialog,{message:d.data?d.data:angular.fromJson(d)}),a.reject(d))})}}]),angular.module("obiba.form",["obiba.utils","obiba.notification","templates-main"]),angular.module("obiba.form").service("FormServerValidation",["$rootScope","$log","StringUtils","NOTIFICATION_EVENTS",function(a,b,c,d){this.error=function(e,f,g){if(e.data instanceof Array){var h=function(a,b){f[a].$dirty=!0,f[a].$setValidity("server",!1),null===f[a].errors&&(f[a].errors=[]),f[a].errors.push(c.capitaliseFirstLetter(b.message))};e.data.forEach(function(a){var b=a.path.split(".").slice(-2).join(".");g&&g.length?g.forEach(function(c){h(b+"-"+c,a)}):h(b,a)}),b.debug(f)}else a.$broadcast(d.showNotificationDialog,{titleKey:"form-server-error",message:e.data?e.data:angular.fromJson(e)})}}]),angular.module("obiba.form").directive("formServerError",[function(){return{restrict:"A",require:"?ngModel",link:function(a,b,c,d){return b.on("change",function(){return a.$apply(function(){return d.$setValidity("server",!0)})})}}}]).directive("formInput",[function(){return{restrict:"AE",require:"^form",scope:{name:"@",model:"=",disabled:"=",type:"@",label:"@",required:"@",help:"@"},templateUrl:"form/form-input-template.tpl.html",link:function(a,b,c,d){(angular.isUndefined(a.model)||null===a.model)&&(a.model=""),a.form=d},compile:function(a,b){b.type||(b.type="text")}}}]).directive("formTextarea",[function(){return{restrict:"AE",require:"^form",scope:{name:"@",model:"=",disabled:"=",label:"@",required:"@",help:"@"},templateUrl:"form/form-textarea-template.tpl.html",link:function(a,b,c,d){(angular.isUndefined(a.model)||null===a.model)&&(a.model=""),a.form=d},compile:function(a,b){b.type||(b.type="text")}}}]).directive("formLocalizedInput",[function(){return{restrict:"AE",require:"^form",scope:{locales:"=",name:"@",model:"=",label:"@",required:"@",help:"@"},templateUrl:"form/form-localized-input-template.tpl.html",link:function(a,b,c,d){(angular.isUndefined(a.model)||null===a.model)&&(a.model=""),a.form=d}}}]).directive("formCheckbox",[function(){return{restrict:"AE",require:"^form",scope:{name:"@",model:"=",label:"@",help:"@"},templateUrl:"form/form-checkbox-template.tpl.html",link:function(a,b,c,d){(angular.isUndefined(a.model)||null===a.model)&&(a.model=!1),a.form=d}}}]).directive("formCheckboxGroup",[function(){return{restrict:"A",scope:{labelPrefix:"@",options:"=",selected:"="},template:'<div form-checkbox ng-repeat="item in items" model="item.value" label="{{labelPrefix}}.{{item.name}}">',link:function(a){a.items=a.options.map(function(b){return a.selected?a.selected.indexOf(b)<0?{name:b,value:!1}:{name:b,value:!0}:{name:b,value:!1}}),a.$watch("items",function(b){a.selected=b.filter(function(a){return a.value}).map(function(a){return a.name})},!0)}}}]),angular.module("ngObiba",["obiba.form","obiba.notification","obiba.rest","obiba.utils"]),angular.module("templates-main",["form/form-checkbox-template.tpl.html","form/form-input-template.tpl.html","form/form-localized-input-template.tpl.html","form/form-textarea-template.tpl.html","notification/notification-confirm-modal.tpl.html","notification/notification-modal.tpl.html"]),angular.module("form/form-checkbox-template.tpl.html",[]).run(["$templateCache",function(a){a.put("form/form-checkbox-template.tpl.html",'<div class="checkbox" ng-class="{\'has-error\': (form[fieldName].$dirty || form.saveAttempted) && form[name].$invalid}">\n\n  <label for="{{name}}" class="control-label">\n    {{label | translate}}\n    <span ng-show="required">*</span>\n  </label>\n\n  <input\n      ng-model="model"\n      type="checkbox"\n      id="{{name}}"\n      name="{{name}}"\n      form-server-error>\n\n  <ul class="input-error list-unstyled" ng-show="form[name].$dirty && form[name].$invalid">\n    <li ng-show="form[name].$error.required" translate>required</li>\n    <li ng-repeat="error in form[name].errors">{{error}}</li>\n  </ul>\n\n  <p ng-show="help" class="help-block">{{help | translate}}</p>\n\n</div>\n\n')}]),angular.module("form/form-input-template.tpl.html",[]).run(["$templateCache",function(a){a.put("form/form-input-template.tpl.html",'<div class="form-group" ng-class="{\'has-error\': (form[name].$dirty || form.saveAttempted) && form[name].$invalid}">\n\n  <label for="{{name}}" class="control-label">\n    {{label | translate}}\n    <span ng-show="required">*</span>\n  </label>\n\n  <input\n      ng-model="model"\n      type="{{type}}"\n      class="form-control"\n      id="{{name}}"\n      name="{{name}}"\n      form-server-error\n      ng-disabled="disabled"\n      ng-required="required">\n\n  <ul class="input-error list-unstyled" ng-show="form[name].$dirty && form[name].$invalid">\n    <li ng-show="form[name].$error.required" translate>required</li>\n    <li ng-repeat="error in form[name].errors">{{error}}</li>\n  </ul>\n\n  <p ng-show="help" class="help-block">{{help | translate}}</p>\n\n</div>')}]),angular.module("form/form-localized-input-template.tpl.html",[]).run(["$templateCache",function(a){a.put("form/form-localized-input-template.tpl.html",'<div class="form-group" ng-class="{\'has-error\': (form[name].$dirty || form.saveAttempted) && form[name].$invalid}">\n\n    <label for="{{name}}" class="control-label">\n        {{label | translate}}\n        <span ng-show="required">*</span>\n    </label>\n\n    <div class="input-group" ng-repeat="locale in locales track by $index">\n        <span class="input-group-addon">{{locale.lang}}</span>\n        <input\n                ng-model="locale.value"\n                type="text"\n                class="form-control"\n                id="{{name}}.{{locale.lang}}"\n                name="{{name}}.locale.lang}}"\n                form-server-error>\n    </div>\n\n    <ul class="input-error list-unstyled" ng-show="form[name].$dirty && form[name].$invalid">\n        <li ng-show="form[name].$error.required" translate>required</li>\n        <li ng-repeat="error in form[name].errors">{{error}}</li>\n    </ul>\n\n    <p ng-show="help" class="help-block">{{help | translate}}</p>\n\n</div>')}]),angular.module("form/form-textarea-template.tpl.html",[]).run(["$templateCache",function(a){a.put("form/form-textarea-template.tpl.html",'<div class="form-group" ng-class="{\'has-error\': (form[name].$dirty || form.saveAttempted) && form[name].$invalid}">\n\n  <label for="{{name}}" class="control-label">\n    {{label | translate}}\n    <span ng-show="required">*</span>\n  </label>\n\n  <textarea\n      ng-model="model"\n      type="{{type}}"\n      class="form-control"\n      id="{{name}}"\n      name="{{name}}"\n      form-server-error\n      ng-disabled="disabled"\n      ng-required="required"></textarea>\n\n  <ul class="input-error list-unstyled" ng-show="form[name].$dirty && form[name].$invalid">\n    <li ng-show="form[name].$error.required" translate>required</li>\n    <li ng-repeat="error in form[name].errors">{{error}}</li>\n  </ul>\n\n  <p ng-show="help" class="help-block">{{help | translate}}</p>\n\n</div>\n')}]),angular.module("notification/notification-confirm-modal.tpl.html",[]).run(["$templateCache",function(a){a.put("notification/notification-confirm-modal.tpl.html",'<div class="modal-content">\n\n  <div class="modal-header">\n    <button type="button" class="close" aria-hidden="true" ng-click="cancel()">&times;</button>\n    <h4 class="modal-title">\n      <i class="fa fa-exclamation-triangle"></i>\n      <span ng-hide="confirm.title" translate>confirmation</span>\n      {{confirm.title}}\n    </h4>\n  </div>\n\n  <div class="modal-body">\n    <p>{{confirm.message}}</p>\n  </div>\n\n  <div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="cancel()">\n      <span ng-hide="confirm.cancel" translate>cancel</span>\n      {{confirm.cancel}}\n    </button>\n    <button type="button" class="btn btn-primary" ng-click="ok()">\n      <span ng-hide="confirm.ok" translate>ok</span>\n      {{confirm.ok}}\n    </button>\n  </div>\n\n</div>')}]),angular.module("notification/notification-modal.tpl.html",[]).run(["$templateCache",function(a){a.put("notification/notification-modal.tpl.html",'<div class="modal-content">\n\n  <div class="modal-header">\n    <button type="button" class="close" aria-hidden="true" ng-click="close()">&times;</button>\n    <h4 class="modal-title">\n      <i ng-hide="notification.iconClass" class="fa fa-info-circle"></i>\n      <i ng-show="notification.iconClass" class="fa {{notification.iconClass}}"></i>\n      <span ng-hide="notification.title" translate>{{notification.titleKey || \'notification\'}}</span>\n      {{notification.title}}\n    </h4>\n  </div>\n\n  <div class="modal-body">\n    <p>{{notification.message}}</p>\n  </div>\n\n  <div class="modal-footer">\n    <button type="button" class="btn btn-default" ng-click="close()">\n      <span translate>close</span>\n    </button>\n  </div>\n\n</div>')}]);
>>>>>>> upstream/form-directives
